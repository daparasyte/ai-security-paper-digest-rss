name: Fetch Papers from OpenAlex

on:
  workflow_dispatch:
    inputs:
      topic:
        description: "Topic to search OpenAlex for"
        required: true
        default: "LLM red teaming"
      start_date:
        description: "Start date (YYYY-MM-DD)"
        required: false
        default: "2022-01-01"
      max_pages:
        description: "Max pages to fetch"
        required: false
        default: "100"
      gpt_model:
        description: "GPT model to use"
        required: false
        default: "openai/gpt-4o-mini"
      gpt_temperature:
        description: "GPT temperature (0.0 to 1.0)"
        required: false
        default: "0.1"

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENALEX_EMAIL: ${{ secrets.OPENALEX_EMAIL }}
      BASEROW_API_TOKEN: ${{ secrets.BASEROW_API_TOKEN }}
      BASEROW_TABLE_ID: ${{ secrets.BASEROW_TABLE_ID }}
      AI_MODEL: ${{ github.event.inputs.gpt_model }}
      TEMPERATURE: ${{ github.event.inputs.gpt_temperature }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check OpenRouter API key
        run: |
          echo "Checking OpenRouter API key..."
          if [ -z "$OPENROUTER_API_KEY" ]; then
            echo "::error::OPENROUTER_API_KEY is not set. Please set it in repository secrets."
            exit 1
          fi
          echo "API key is set (length: ${#OPENROUTER_API_KEY})"
          echo "API key starts with: ${OPENROUTER_API_KEY:0:8}..."

          # Test the API key
          echo "Testing API key with OpenRouter..."
          response=$(curl -s -w "\n%{http_code}" -H "Authorization: Bearer $OPENROUTER_API_KEY" https://openrouter.ai/api/v1/models)
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          echo "Response HTTP code: $http_code"
          echo "Response preview: ${response_body:0:200}..."

          if [ "$http_code" != "200" ]; then
            echo "::error::OpenRouter API key is not valid. HTTP code: $http_code"
            echo "Full response: $response_body"
            exit 1
          fi

          # Check for error in JSON response structure
          if echo "$response_body" | jq -e '.error' > /dev/null 2>&1; then
            echo "::error::OpenRouter API returned an error response."
            echo "Full response: $response_body"
            exit 1
          fi

          echo "✅ OpenRouter API key is valid"

      - name: Update daily limit for paid users
        run: |
          python -c "
          from utils.llm import update_daily_limit_for_paid_user
          update_daily_limit_for_paid_user()
          print('✅ Updated daily limit to 1000 requests/day for paid user')
          "

      - name: Run OpenAlex topic fetch
        run: |
          python search_papers.py \
            --topic "${{ github.event.inputs.topic }}" \
            --start-date "${{ github.event.inputs.start_date }}" \
            --max-pages "${{ github.event.inputs.max_pages }}" \
            --non-interactive
